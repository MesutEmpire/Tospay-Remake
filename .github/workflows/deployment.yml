name: Deployment to Github Pages

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: https://registry.npmjs.org
          add-path: true

      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install Angular CLI
        run: npm i -g @angular/cli@15.0.5

      - name: Install and build
        run: npm ci && ng build --configuration=production --base-href https://MesutEmpire.github.io/TosPay-Remake/

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-output
          path: dist/paynet

      
  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - name: Deploy to GitHub Pages
  #       if: success()
  #       id: deployment
  #       uses: actions/github-script@v6.3.3
  #       with:
  #         script: |
  #           sh -c "ls -al"
            

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: build-output

    - name: Push to Branch
      env:
        ACCESS: ${{ secrets.ACCESS }}
      run: |
        git init
        git config user.name "Github Actions"
        git config user.email "actions@github.com"
        git add .
        git commit -m "Deploy"
        git branch gh-pages
        git remote add origin https://github.com/MesutEmpire/TosPay-Remake.git
        git push -f origin gh-pages

     
    # - name: Push to Branch
    #    env:
    #       ACCESS: ${{ secrets.ACCESS }}
    #   run: |
    #       git init
    #       git config user.name "Github Actions"
    #       git config user.email "actions@github.com"
    #       git add .
    #       git commit -m "Deploy"
    #       git remote add origin https://$"ACCESS"@github.com/MesutEmpire/TosPay-Remake.git
    #       git push -f origin gh-pages
        



        
# name: Deployment to Github Pages

# on:
#   push:
#     branches:
#       - "main"

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     strategy:
#       matrix:
#         node-version: [16.x]

#     steps:
#       - name: Checkout
#         uses: actions/checkout@v2

#       - name: Use Node.js ${{ matrix.node-version }}
#         uses: actions/setup-node@v1
#         with:
#           node-version: ${{ matrix.node-version }}

#       - name: Cache node modules
#         id: cache-nodemodules
#         uses: actions/cache@v2
#         env:
#           cache-name: cache-node-modules
#         with:
#           # caching node_modules
#           path: node_modules
#           key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
#           restore-keys: |
#             ${{ runner.os }}-build-${{ env.cache-name }}-
#             ${{ runner.os }}-build-
#             ${{ runner.os }}-

#       - name: Install and build
#         run: npm install && npm run gh-build && cp docs/index.html docs/404.html

#       - name: Setup Pages
#         uses: actions/configure-pages@v1

#       - name: Build with Jekyll
#         uses: actions/jekyll-build-pages@v1
#         with:
#           source: ./
#           destination: ./_site

#       - name: Upload artifact
#         uses: actions/upload-pages-artifact@v1

#   deploy:
#     environment:
#       name: github-pages
#       url: ${{ steps.deployment.outputs.page_url }}

#     permissions:
#       id-token: write
#       pages: write

#     runs-on: ubuntu-latest
#     needs: build
#     steps:
#       - name: Deploy to GitHub Pages
#         if: success()
#         id: deployment
#         uses: actions/deploy-pages@v1
#         env:
#           GITHUB_TOKEN: ${{secrets.TOKEN}}
